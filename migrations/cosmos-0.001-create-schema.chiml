ins: action, migrationConfig
out: output
vars:
  schemas:

    - name: 'sjboards'
      collectionName: 'sj_boards'
      caption: 'Boards'
      fields:
        name:
          notNull: 1
        members:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'users'
              keyField: '_id'
              fields: ['username']
            privilege:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.presentation.option %>'
              options:
                admin: 'Administrator' # can do everything
                collabolator: 'Collaborator' # can add and manage own cards
                watcher: 'Watcher' # can only see everything

    - name: 'sjlabeltypes'
      collectionName: 'sj_label_types'
      caption: 'Label Types'
      fields:
        name:
          notNull: 1
        board:
          inputTemplate: '<%- cck.input.many2one %>'
          presentationTemplate: '<%- cck.presentation.many2one %>'
          ref: 'sjboards'
          keyField: '_id'
          fields: ['name']
        representation:
          inputTemplate: '<%- cck.input.jsonText %>'
          presentationTemplate: '<%- cck.presentation.jsonText %>'
          
    - name: 'sjcards'
      collectionName: 'sj_cards'
      fields:
        name:
          notNull: 1
        description:
          inputTemplate: '<%- cck.input.textArea %>'
          presentationTemplate: '<%- cck.presentation.text %>'
        members:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'users'
              keyField: '_id'
              fields: ['username']
            privilege:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.presentation.option %>'
              options:
                assignee: 'Assignee' # can do everything
                manager: 'Manager' # can add and manage own cards
                watcher: 'Watcher' # can only see everything
        attachments:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            inputTemplate: '<%- cck.input.image %>'
            presentationTemplate: '<%- cck.presentation.image %>'
        progressMeter:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name: {}
            weight: {}
            completed:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.input.option %>'
              options:
                inProgress: 'In Progress'
                completed: 'Completed'
            completion: {}
            card: 
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.input.many2one %>'
              ref: 'cards'
              keyField: '_id'
              fields: ['name']
      initChain: '<%- chainPath %>cosmos/card.init.js'
      afterInsertChain: '<%- chainPath %>cosmos/card.afterInsertOrUpdate.js'
      afterUpdateChain: '<%- chainPath %>cosmos/card.afterInsertOrUpdate.js'
    
    - name: 'sjviews'
      collectionName: 'sj_views'
      fields:
        name:
          notNull: 1
          isUnique: 1
        chain:
          inputTemplate: '<%- cck.input.codeText %>'
          tabularPresentationTemplate: '<%- cck.presentation.text %>'
          presentationTemplate: '<%- cck.presentation.jsonText %>'
          hidden: ['tabular']
          editor: 'yaml'
        view:
          inputTemplate: '<%- cck.input.codeText %>'
          tabularPresentationTemplate: '<%- cck.presentation.text %>'
          presentationTemplate: '<%- cck.presentation.jsonText %>'
          hidden: ['tabular']
          editor: 'ejs'

do:
  - if: action == 'up'
    do:
      # upgrade
      - '(schemas) -> [$.cck.createSchema]'

    else:
      # downgrade
      - '(schemas) -> [$.cck.removeSchema]'