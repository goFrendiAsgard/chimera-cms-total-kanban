ins: action, migrationConfig
out: output
vars:
  data:

    - name: Sample Card
      note: |
        # Sample Card
        This is a card example.

        # List
        Here are some list:

        * List 1
        * List 2
        * List 3
      publication: Draft
      state: To Do
      urgency: Not Urgent
      importance: Important
      department: IT
      default: 1

do:  

  - if: action == 'up'
    do:

      # get boardId
      - |('tk_boards', 'find', {'name': 'Sample Board'}) -> [$.helper.mongoExecute] -> boards
      - |(String(boards[0]._id)) --> boardId

      # get labelTypeState
      - |('tk_label_types', 'find', {'name': 'state'}) -> [$.helper.mongoExecute] -> labelTypes
      - |(String(labelTypes[0]._id)) --> labelTypeState

      # get labelTypePublication
      - |('tk_label_types', 'find', {'name': 'publication'}) -> [$.helper.mongoExecute] -> labelTypes
      - |(String(labelTypes[0]._id)) --> labelTypePublication

      # get labelTypeDepartment
      - |('tk_label_types', 'find', {'name': 'department'}) -> [$.helper.mongoExecute] -> labelTypes
      - |(String(labelTypes[0]._id)) --> labelTypeDepartment

      # assign default board to the cards
      - ins: data, boardId
        out: data
        do: |
          (data, boardId) => {
            for (let i = 0; i < data.length; i++) {
              data[i].board = boardId
            }
            return data
          }

      # modify data[0]
      - |{type: labelTypeState, label:'Doing'} --> data[0].tags[0]
      - |{type: labelTypePublication, label:'Draft'} --> data[0].tags[1]
      - |{type: labelTypeDepartment, label:'IT'} --> data[0].tags[2]

      - |('tk_cards', 'insert', data) -> [$.helper.mongoExecute] -> output

    else:
      - "('tk_cards', 'remove', {'default': 1}) -> [$.helper.mongoExecute] -> output"