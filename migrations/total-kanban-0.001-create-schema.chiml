ins: action, migrationConfig
out: output
vars:
  schemas:

    - name: 'tkboards'
      collectionName: 'tk_boards'
      caption: 'Boards'
      fields:
        name:
          notNull: 1
        members:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'users'
              keyField: '_id'
              fields: ['username']
            privilege:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.presentation.option %>'
              options:
                admin: 'Administrator' # can do everything
                collabolator: 'Collaborator' # can add and manage own cards
                watcher: 'Watcher' # can only see everything
      selectGroups: ['loggedIn']
      insertGroups: ['loggedIn']
      updateGroups: ['loggedIn']
      deleteGroups: ['loggedIn']

    - name: 'tklabeltypes'
      collectionName: 'tk_label_types'
      caption: 'Label Types'
      fields:
        name:
          notNull: 1
        caption:
          notNull: 1
        board:
          inputTemplate: '<%- cck.input.many2one %>'
          presentationTemplate: '<%- cck.presentation.many2one %>'
          ref: 'tkboards'
          keyField: '_id'
          fields: ['name']
        labels:
          inputTemplate: '<%- cck.input.jsonText %>'
          presentationTemplate: '<%- cck.presentation.jsonText %>'
      selectGroups: ['loggedIn']
      insertGroups: ['loggedIn']
      updateGroups: ['loggedIn']
      deleteGroups: ['loggedIn']
          
    - name: 'tkcards'
      collectionName: 'tk_cards'
      caption: 'Cards'
      fields:
        name:
          notNull: 1
        board:
          notNull: 1
          inputTemplate: '<%- cck.input.many2one %>'
          presentationTemplate: '<%- cck.presentation.many2one %>'
          ref: 'tkboards'
          keyField: '_id'
          fields: ['name']
        parsedDescription:
          caption: 'Description'
          presentationTemplate: '<%%- value %>'
          hidden: ['insert', 'update']
        tags:
          caption: 'Tags'
          presentationTemplate: '<%- viewPath %>total-kanban/cck/presentations/tags.ejs'
          hidden: ['insert', 'update', 'detail']
        description:
          inputTemplate: '<%- cck.input.codeText %>'
          presentationTemplate: '<%- cck.presentation.text %>'
          editor: markdown
          hidden: ['tabular', 'detail']
        scheduleFrom:
          inputTemplate: '<%- cck.input.dateTime %>'
          presentationTemplate: '<%- cck.presentation.text %>'
        scheduleTo:
          inputTemplate: '<%- cck.input.dateTime %>'
          presentationTemplate: '<%- cck.presentation.text %>'
        members:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'users'
              keyField: '_id'
              fields: ['username']
            privilege:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.presentation.option %>'
              options:
                assignee: 'Assignee' # can do everything
                manager: 'Manager' # can add and manage own cards
                watcher: 'Watcher' # can only see everything
          hidden: ['tabular']
        attachments:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            image:
              inputTemplate: '<%- cck.input.image %>'
              presentationTemplate: '<%- cck.presentation.image %>'
          hidden: ['tabular']
        progressMeter:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name: {}
            weight: {}
            completed:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.input.option %>'
              options:
                inProgress: 'In Progress'
                completed: 'Completed'
            completion: {}
            card: 
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.input.many2one %>'
              ref: 'tkcards'
              keyField: '_id'
              fields: ['name']
          hidden: ['tabular']
      initChain: '<%- chainPath %>total-kanban/card.init.js'
      afterInsertChain: '<%- chainPath %>total-kanban/card.afterInsertOrUpdate.js'
      afterUpdateChain: '<%- chainPath %>total-kanban/card.afterInsertOrUpdate.js'
      afterSelectChain: '<%- chainPath %>total-kanban/card.afterSelect.js'
      showView: '<%- viewPath %>total-kanban/cck/card.kanban.show.ejs'
      selectGroups: ['loggedIn']
      insertGroups: ['loggedIn']
      updateGroups: ['loggedIn']
      deleteGroups: ['loggedIn']
   
do:

  - if: action == 'up'
    do:
      # upgrade
      - '(schemas) -> [$.cck.createSchema]'

    else:
      # downgrade
      - '(schemas) -> [$.cck.removeSchema]'