ins: action, migrationConfig
out: output
vars:
  schemas:

    - name: 'tkboards'
      collectionName: 'tk_boards'
      caption: 'Boards'
      fields:
        name:
          notNull: 1
        members:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'users'
              keyField: '_id'
              fields: ['username']
            privilege:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.presentation.option %>'
              options:
                admin: 'Administrator' # can do everything
                collabolator: 'Collaborator' # can add and manage own cards
                watcher: 'Watcher' # can only see everything
      selectGroups: ['loggedIn']
      insertGroups: ['loggedIn']
      updateGroups: ['loggedIn']
      deleteGroups: ['loggedIn']

    - name: 'tklabeltypes'
      collectionName: 'tk_label_types'
      caption: 'Label Types'
      fields:
        name:
          notNull: 1
          bootstrapColWidth: 2
        caption:
          notNull: 1
          bootstrapColWidth: 2
        board:
          inputTemplate: '<%- cck.input.many2one %>'
          presentationTemplate: '<%- cck.presentation.many2one %>'
          ref: 'tkboards'
          keyField: '_id'
          fields: ['name']
          bootstrapColWidth: 2
        labels:
          inputTemplate: '<%- cck.input.jsonText %>'
          presentationTemplate: '<%- cck.presentation.jsonText %>'
          bootstrapColWidth: 4
      selectGroups: ['loggedIn']
      insertGroups: ['loggedIn']
      updateGroups: ['loggedIn']
      deleteGroups: ['loggedIn']
          
    - name: 'tkcards'
      collectionName: 'tk_cards'
      caption: 'Cards'
      fields:
        name:
          notNull: 1
        board:
          notNull: 1
          inputTemplate: '<%- cck.input.many2one %>'
          presentationTemplate: '<%- cck.presentation.many2one %>'
          ref: 'tkboards'
          keyField: '_id'
          fields: ['name']
          hidden: ['tabular']
        tags:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            type:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'tklabeltypes'
              keyField: '_id'
              fields: ['caption']
              bootstrapColWidth: 6
            label: {}
          hidden: ['tabular']
        note:
          inputTemplate: '<%- cck.input.codeText %>'
          presentationTemplate: '<%- viewPath %>total-kanban/cck/presentations/markdown.ejs'
          editor: markdown
          hidden: ['tabular']
        scheduleFrom:
          inputTemplate: '<%- cck.input.dateTime %>'
          presentationTemplate: '<%- cck.presentation.text %>'
          hidden: ['tabular']
        scheduleTo:
          inputTemplate: '<%- cck.input.dateTime %>'
          presentationTemplate: '<%- cck.presentation.text %>'
          hidden: ['tabular']
        members:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'users'
              keyField: '_id'
              fields: ['username']
            privilege:
              inputTemplate: '<%- cck.input.option %>'
              presentationTemplate: '<%- cck.presentation.option %>'
              options:
                assignee: 'Assignee' # can do everything
                manager: 'Manager' # can add and manage own cards
                watcher: 'Watcher' # can only see everything
          hidden: ['tabular']
        images:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            image:
              inputTemplate: '<%- cck.input.image %>'
              presentationTemplate: '<%- cck.presentation.image %>'
          hidden: ['tabular']
        documents:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            file:
              inputTemplate: '<%- cck.input.file %>'
              presentationTemplate: '<%- cck.presentation.file %>'
          hidden: ['tabular']
        checklist:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name: {}
            weight: {}
            completion: {}
            card: 
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'tkcards'
              keyField: '_id'
              fields: ['name']
          hidden: ['tabular']
        chat:
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            message:
              inputTemplate: '<%- cck.input.codeText %>'
              presentationTemplate: '<%- cck.presentation.text %>'
            writeBy:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'users'
              keyField: '_id'
              fields: ['username']
            writeTime:
              inputTemplate: '<%- cck.input.dateTime %>'
              presentationTemplate: '<%- cck.presentation.text %>'
            read:
              inputTemplate: '<%- cck.input.one2Many %>'
              presentationTemplate: '<%- cck.presentation.one2many %>'
              fields:
                readBy:
                  inputTemplate: '<%- cck.input.many2one %>'
                  presentationTemplate: '<%- cck.presentation.many2one %>'
                  ref: 'users'
                  keyField: '_id'
                  fields: ['username']
                readTime:
                  inputTemplate: '<%- cck.input.dateTime %>'
                  presentationTemplate: '<%- cck.presentation.text %>'
          hidden: ['tabular']
      initChain: '<%- chainPath %>total-kanban/cck/card.init.js'
      selectGroups: ['loggedIn']
      insertGroups: ['loggedIn']
      updateGroups: ['loggedIn']
      deleteGroups: ['loggedIn']
   
do:

  - if: action == 'up'
    do:
      # upgrade
      - |(schemas) -> [$.cck.createSchema]

    else:
      # downgrade
      - |(schemas) -> [$.cck.removeSchema]
